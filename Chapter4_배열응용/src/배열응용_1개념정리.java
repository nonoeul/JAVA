import java.util.Arrays;

/*
 * 	배열 : 같은 데이터르 모아서 관리
 * 		  -------------------
 * 	변수
 * 		----
 * 		10 => a ==> int a=10; (한개만 저장하는 공간)
 * 		----		---- 기본형 (자바에서 저장하는 데이터형)
 * 	배열 ==> 연속적으로 메모리 배치  ==> 인덱스번호를 이용한다.
 * 		arr[0] arr[1].... 이런 식으로 정보가 넘겨진다. 
 * 		---------------------- // 내가 원하는 갯수만큼 저장해서 쓴다.
 * 		1 | 2 | 3 | 4 | 5 | 6  //  
 * 	    0-----------------------
 * 		arr
 * 		int[] arr={1,2,3,4,5,}
 * 
 * 자바의 메모리 구조
 * 		-----------------------------
 * 		Method Area => method, static
 * 		-----------------------------
 * 		Stack => 메모리 관리 (지역변수, 매기변수)
 * 							-----
 * 						 {}	지역변수는 블록을 벗어나면 사라진다. / {}에서만 사용 가능
 * 		-----------------------------------------
 * 		Heap  => 동적 메모리 할당 (new) => 배열 / 클래스 
 * 		------------------------------------------
 * 		
 * 		1. 배열선언 // 선언 방법은 두 가지 있다. 데이터형에다가 , 배열명에다가
 * 			데이터형[] 배열명;
 * 			데이터형 배열명[];
 * 		2. 배열할당 (연속적으로 몇개를 만들지 여부)
 * 			데이터형[] 배열명 = new 
 * 							---- 
 * 							delete
 * 								free() --> 개발자가 사용을 잘 안함-GC
 * 								GC=가비지컬렉션 = 사용하지 않거나, NULL값일때 자동삭제
 * 								System.gc()
 * 
 * 		데이터형 배열명[] = new 데이터형[크기결정] // c언어는 배열명[]뒤에 붙는다. 자바는 상관없다. 
 * 		
 * 		예)
 * 			int[] arr=new int[5];
 * 			--------- |---------
 * 			Stack		Heap(실제 데이터저장)
 * 			---------	----[0]--[1]--[2]--[3]--[4]
 * 			0x100			 0	  0    0    0    0
 * 			--------------------------------------
 * 			실제 저장된 데이터의 메모리 주소를 이용해서 데이터 관리 (참조변수)
 * 			==> 배열 / 클래스 
 * 				 
 * 		** 변수 (변수, 배열, 클래스) => 초기화 후에 사용
 * 		
 * 		클래스(많이 사용) => 전체를 묶어준다는 개념 => 전체를 묶어준다.			
 * 
 * 
 * 
 * 		초기화방법!!
 * 			1. 인덱스를 이용하는 초기화 방법
 * 				int[] arr=new int[3];
 * 				arr[0]=10
 * 				arr[1]=20
 * 				arr[2]=30
 * 			---[0]---[1]---[2]---
 * 				0	  0		0
 * 				10	  20	30
 * 			---------------------
 * 
 * 			2. for문을 이용해서 초기화
 * 				for(int i=0;i<arr.length;i++)
 * 				{
 * 					arr[i]=(i+1)*10
 * 				}
 * 			----------------------
 * 
 * 			3. 선언과 동시에 초기화 
 * 			----------------------
 * 			영화 / 뮤직 (파일,오라클,크롤링)
 * 			int[] arr={1,2,3,4,5} {} 중괄호이다. 
 * 			연산자 : == !=, ===, !== , EL
 * 			----------------------
 * 			char[] c={'A','B'....}
 * 			String[] s={"","",""...}
 * 
 * 			4. 배열 => 고정
 * 			   배열 확장 ==> 새로운 배열을 만든다.
 * 			   배열 복사
 * 			  --------
 * 			   얕은 복사 ==> 주소를 동일하게 만든다.
 * 			   int[] arr()
 * 			   int[] arr1=arr;
 * 			   깊은 복사 ==> 새로운 주소 만들기
 * 			   int[] arr()
 * 			   int[] arr1=arr.clone()
 * 			   => arraycopy()
 * 			   => for를 이용해서 데이터값만 복사 
 * 			   	  
 * 			5.new를 이용하는 경우 ==> 기본 디폴트 값이 설정된다.
 * 			  int[] ===> 0
 * 			  Char[] ===> \u0000
 * 			  String[] ===> null (모든 클래스의 기본 디롤프틑 null)
 * 			  					--------- 메모리주소가 없는 경우
 * 			  					--------- NullPointerException
 * 			  double[] ===> 0.0
 * 			  boolean[] ===> false
 */



public class 배열응용_1개념정리 {
	public static void main(String[] args) {
		
		// char배열 선언 =-> 26 ==> 초기값 ==> A~Z
		char[] alpha=new char[26];
		
		char c='A';
		for (int i = 0; i < alpha.length; i++)
		{
			alpha[i]=c++;
		}
		
		for(char cc:alpha) // 이미 위에 c가 선언되ㅓ 있기 때문에
		{
			System.out.print(cc+" ");
		}
			
			System.out.println();
			System.out.print(Arrays.toString(alpha));
	}
}






















































