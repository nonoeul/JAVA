import java.util.Iterator;

/*
 * 
 * 자바에서 지원하는 반복문
 * -----------------
 * for : 반복 횟수가 지정된 경우에 주로 사용된다.
 * 	= 일반 for
 * 	= for~each : 출력문 // 웹에서 가장 많이 등장: 향상된 for문) * 배열,컬렉션 데이터가 많을 때 사용 가능하다.
 * while : 반복 횟수를 모르는 경우 (선 조건)
 * do~while : 반복횟수를 모르는 경우 (후조건) => 무조건 1이상은 수행이 가능하다.
 * 
 *	for(초기값;조건식;증감식)
 *	{
 *		반복 실행문장
 *	}
 *	
 *	초기값 : 시작점 ==> 한번만 수행
 *	조건식 : 수행을 준비할 때 (종료점)
 *	증감식 : 초기값부터 시작해서 조건식이 false가 나올때가지 계속해서 반복한다.
 *	-- 증감식은 감소도 가능하다.
 *	
 *	for(int i=10;i>=1;i--)
 *	증가는 여러개 증가도 가능하다.
 *	
 *	for(int i=1;i<=10li+=2) i=1. i=3. i=5. i=7...
 *	==== 복합 대입 연산자 
 *	
 *	for문은 실행순서를 알아야한다. 
 *	
 *	=> for문은 한 문장만 수행이 가능
 *	   여러 문장 사용시에는 {}블록을 열고 닫고 처리한다.
 *	
 *		1."초기값"이 조건식에 부합하는지를 확인 
 *		2."조건식"(true/false)인지 확인 
 *		3."반복실행문장"으로 이동 false면 종료 
 *		4."증감식" true일 경우 증감식으로 이동
 *		5.(2) 증감을 한 후 다시 2번 조건식으로 이동해서 반복
 *		6. 조건식이 false가 나올떄까지 계속해서 반복
 *
 *	=> for(초기값 ; 조건식 ; 증감식)	
 *	   {
 *			반복 실행 문장
 *	   }
 *
 *		초기값 => 조건식에 대입 => false => 종료(for)
 *						   => true	=> 반복 수행문장 수행 => 초기값 증가
 *		
 */
public class 반복문_1 {
	public static void main(String[] args) {
		// Hello Java를 10번 출력
		System.out.println("Hello java"); 
		System.out.println("==========for문 이용============");
		
		for (int i = 0; i < 10; i++) 
		{
			System.out.println((i+1)+". Hello java");
		}

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
}
